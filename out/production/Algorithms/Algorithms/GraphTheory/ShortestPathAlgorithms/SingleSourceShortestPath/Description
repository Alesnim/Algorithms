Single Source Shortest Path algorithms are when given a weighted graph and a source vertex, find the shortest path from that vertex to all other vertices. For
example, given this graph and weights:

Weights:
a -> b: 6
a -> e: 1
e -> b: 1
b -> c: 7
d -> c: 2
e -> d: 4

Graph:
a -> b ↘
↓ ↗     c
e -> d ↗

The shortest paths will be as follows:

a -> a: 0
a -> b: 2
a -> c: 7
a -> d: 5
a -> e: 1

The hard part is that because the weights vary, the shortest direct path from one vertex to another isn't the shortest path when talking about the weights. Shortest
path algorithms consists of strategically relaxing edges edge by edge. Relaxing an edge is where you check if using that edge to get to a vertex is more optimal
than what previously calculated.